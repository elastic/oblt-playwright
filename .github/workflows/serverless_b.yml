name: "Serverless (B)"
on:
  # schedule:
  #   - cron: "0 * * * *"
  #   - cron: "15 * * * *"
  #   - cron: "30 * * * *"
  #   - cron: "45 * * * *"
permissions:
  contents: read

env:
  KIBANA_HOST: ${{ secrets.KIBANA_HOST_DEPLOYMENT_B }}
  KIBANA_USERNAME: ${{ secrets.KIBANA_USERNAME_SERVERLESS }}
  KIBANA_PASSWORD: ${{ secrets.KIBANA_PASSWORD_SERVERLESS }}
  ELASTICSEARCH_HOST: ${{ secrets.ELASTICSEARCH_HOST_DEPLOYMENT_B }}
  API_KEY: ${{ secrets.API_KEY_DEPLOYMENT_B }}
  TIME_UNIT: ${{ vars.TIME_UNIT_DAYS }}
  TIME_VALUE: ${{ vars.TIME_VALUE_7 }}
  START_DATE: ${{ vars.START_DATE }}
  END_DATE: ${{ vars.END_DATE }}
  ABSOLUTE_TIME_RANGE_SERVERLESS: false

jobs:
  install:
    timeout-minutes: 10
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
 
      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
 
      - name: Cache Playwright binaries
        uses: actions/cache@v4
        id: cache-playwright
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
 
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
 
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

  apm:
      needs: 
        - install
      name: Run tests (APM)
      timeout-minutes: 15
      runs-on: ubuntu-latest
      if: github.event.schedule == '0 * * * *'
      outputs:
        is_running: ${{ steps.set_output.outputs.is_running }}
      steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 20
      - name: Indicate running status
        id: set_output
        run: echo "is_running=true" >> $GITHUB_OUTPUT
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
  
      - name: Cache Playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      
      - name: Run Playwright tests - APM
        run: npx playwright test apm.kibana.spec.ts --project kibana

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: /home/runner/work/oblt-playwright/*.json
          retention-days: 1

  datasets:
      needs: 
        - install
      name: Run tests (Data Set Quality)
      timeout-minutes: 15
      runs-on: ubuntu-latest
      if: github.event.schedule == '15 * * * *'
      outputs:
        is_running: ${{ steps.set_output.outputs.is_running }}
      steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 20
      - name: Indicate running status
        id: set_output
        run: echo "is_running=true" >> $GITHUB_OUTPUT
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Cache Playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      
      - name: Run Playwright tests - Data Set Quality
        run: npx playwright test datasets.kibana.spec.ts --project kibana

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: /home/runner/work/oblt-playwright/*.json
          retention-days: 1

  infra:
    needs: 
      - install
    name: Run tests (Infrastructure)
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: github.event.schedule == '30 * * * *'
    outputs:
        is_running: ${{ steps.set_output.outputs.is_running }}
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v5
      with:
        node-version: 20
    - name: Indicate running status
      id: set_output
      run: echo "is_running=true" >> $GITHUB_OUTPUT
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: |
          node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
 
    - name: Cache Playwright
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/ms-playwright
        key: playwright-${{ hashFiles('package-lock.json') }}
    
    - name: Run Playwright tests - Infrastructure
      run: npx playwright test infra.kibana.spec.ts --project kibana

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: /home/runner/work/oblt-playwright/*.json
        retention-days: 1

  logs:
    needs: 
      - install
    name: Run tests (Logs)
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: github.event.schedule == '45 * * * *'
    outputs:
        is_running: ${{ steps.set_output.outputs.is_running }}
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v5
      with:
        node-version: 20
    - name: Indicate running status
      id: set_output
      run: echo "is_running=true" >> $GITHUB_OUTPUT
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: |
          node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
 
    - name: Cache Playwright
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/ms-playwright
        key: playwright-${{ hashFiles('package-lock.json') }}
    
    - name: Run Playwright tests - Logs
      run: npx playwright test logs.kibana.spec.ts --project kibana

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: /home/runner/work/oblt-playwright/*.json
        retention-days: 1

  upload:
    needs:
      - apm
      - datasets
      - infra
      - logs
    if: always()
    name: Upload test reports to Elasticsearch
    runs-on: ubuntu-latest
    env:
        REPORT_CLUSTER_API_KEY: ${{ secrets.REPORT_CLUSTER_API_KEY }}
        REPORT_CLUSTER_ES: ${{ secrets.REPORT_CLUSTER_ES }}
        REPORT_CLUSTER_INDEX: ${{ vars.REPORT_CLUSTER_INDEX }}
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v5
      with:
        node-version: 20
  
    - name: Download raw test report from artifacts
      uses: actions/download-artifact@v5
      with:
        path: /home/runner/work/oblt-playwright/
        
    - name: Upload test report to Elasticsearch
      run: bash ./src/utils/upload_to_es.sh
